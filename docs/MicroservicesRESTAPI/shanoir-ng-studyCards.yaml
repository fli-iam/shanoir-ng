# Shanoir NG - Import, manage and share neuroimaging data
# Copyright (C) 2009-2019 Inria - https://www.inria.fr/
# Contact us on https://project.inria.fr/shanoir/
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see https://www.gnu.org/licenses/gpl-3.0.html

openapi: "3.0.0"
info:
  version: 0.0.1
  title: Shanoir NG Study Cards Microservice
  description: Microservice API for Shanoir NG study card managment
produces:
  - application/json
paths:
  /studycards:
    get:
      operationId: findStudyCards
      description: Returns all the study Cards
      responses:
        '200':
          description: found study cards
          schema:
            type: array
            items:
              $ref: '#/definitions/StudyCard'
        '204':
          description: no study card found
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      operationId: saveNewStudyCard
      description: Saves a new study card
      consumes:
        - application/json
      parameters:
        - name: studyCard
          in: body
          description: study Card to create
          required: true
          schema:
            $ref: '#/definitions/StudyCard'
      responses:
        '200':
          description: created study card
          schema:
            $ref: '#/definitions/StudyCard'
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '422':
          description: bad parameters
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/studycards/{studyCardId}':
    get:
      operationId: findStudyCardById
      description: 'If exists, returns the study card corresponding to the given id'
      parameters:
        - $ref: '#/parameters/studyCardId'
      responses:
        '200':
          description: found study card
          schema:
            $ref: '#/definitions/StudyCard'
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '404':
          description: no study card found
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      operationId: updateStudyCard
      description: Updates a study card
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/studyCardId'
        - name: study
          in: body
          description: study card to update
          required: true
          schema:
            $ref: '#/definitions/StudyCard'
      responses:
        '204':
          description: study card updated
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '422':
          description: bad parameters
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      operationId: deleteStudyCard
      description: Deletes a study card
      parameters:
        - $ref: '#/parameters/studyCardId'
      responses:
        '204':
          description: study card deleted
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '404':
          description: no study card found
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /studycards/search:
    post:
      operationId: searchStudyCards
      description: 'If exists, returns searched study cards'
      consumes:
        - application/json
      parameters:
        - name: studyIds
          in: body
          description: study ids
          required: true
          schema:
            $ref: '#/definitions/IdListDto'
      responses:
        '200':
          description: found study cards
          schema:
            $ref: '#/definitions/StudyCard'
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '404':
          description: no study card found
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/studycards/centerid/{studyCardId}':
    get:
      operationId: searchCenterId
      description: 'If exists, returns center id'
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/studyCardId'
      responses:
        '200':
          description: found center id
          schema:
            type: integer
            format: int64
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '404':
          description: no center id found
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
parameters:
  studyCardId:
    name: studyCardId
    in: path
    description: id of the study card
    required: true
    type: integer
    format: int64
definitions:
  StudyCard:
    required:
      - id
      - name
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      disable:
        type: boolean
  IdListDto:
    type: object
    properties:
      idList:
        type: array
        items:
          type: integer
          format: int64
  ErrorModel:
    type: object
    properties:
      code:
        type: integer
        format: int32
      details:
        type: object
      message:
        type: string
