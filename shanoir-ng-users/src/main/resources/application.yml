# Shanoir NG - Import, manage and share neuroimaging data
# Copyright (C) 2009-2019 Inria - https://www.inria.fr/
# Contact us on https://project.inria.fr/shanoir/
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see https://www.gnu.org/licenses/gpl-3.0.html

######################################
# Default profile is production      #
######################################
server:
  port: 9901
  error:
    whitelabel:
      enabled: false
  display-name: Shanoir
  administrator.email: ${SHANOIR_ADMIN_EMAIL}
##### Database #####
spring:
  datasource:
    url: jdbc:mysql://${SHANOIR_PREFIX}database:3306/users?useLegacyDatetimeCode=false&serverTimezone=Europe/Paris&characterEncoding=utf-8&useSSL=false
    username: users
    password: password
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    defer-datasource-initialization: true
    generate-ddl: false # default, but prefer to set it explicitly (bootstrap.sh)
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: validate
      use-new-id-generator-mappings: false
    properties:
      hibernate:
        connection:
          charset: UTF-8
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
  main:
    allow-circular-references: true
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  sql:
    init:
      data-locations: classpath:/scripts/import.sql
      mode: never
##### Others #####
  jackson:
    mapper:
      use-getters-as-setters: false
  jooq:
    sql-dialect: Mysql
  rabbitmq:
    host: ${SHANOIR_PREFIX}rabbitmq
    port: 5672
  session:
    store-type: none
  mail:
    host: ${SHANOIR_SMTP_HOST}
    port: 25
    properties:
      mail.smtp.from: do-not-reply@inria.fr


front:
  server:
    address: ${SHANOIR_URL_SCHEME}://${SHANOIR_URL_HOST}/shanoir-ng/
    url: ${SHANOIR_URL_SCHEME}://${SHANOIR_URL_HOST}
##### Keycloak #####
keycloak:
  # attention: this config for the token issuer needs to match the domain of the frontend
  # used for token creation AND the server url needs to be known from inside the docker network:
  auth-server-url: ${SHANOIR_URL_SCHEME}://${SHANOIR_URL_HOST}/auth
  cors: true
  realm: shanoir-ng
  resource: shanoir-ng-users
  ssl-required: external
  credentials.secret: a0be59b0-5a8d-4a11-82fd-5d8e5358444e
  securityConstraints:
    - authRoles: 
      - ROLE_ADMIN
      - ROLE_EXPERT
      - ROLE_USER
    - securityCollections:
      - name: user secured api
      - patterns:
        - /user/*
    - securityCollections:
      - name: role secured api
      - patterns:
        - /role/*
##### Keycloak admin client, that ms users can directly communicate with keycloak #####
kc.admin.client:
  server.url: http://${SHANOIR_PREFIX}keycloak:8080/auth
  realm: master
  client.id: admin-cli
# logging configuration
logging:
  file:
    name: /var/log/shanoir-ng-logs/shanoir-ng-users.log
  level:
    org.springframework.web: ERROR
    org.hibernate: ERROR

---
######################################
# DO NOT COMMIT VALUES MODIFICATIONS #
######################################
server:
  port: 9911
spring:
  config.activate.on-profile: dev
  datasource:
    url: jdbc:mysql://localhost:3307/users?useLegacyDatetimeCode=false&serverTimezone=Europe/Paris&characterEncoding=utf-8&useSSL=false
  jpa:
    generate-ddl: true
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: create
    # Show or not log for each sql query
    show-sql: true
  main:
    allow-circular-references: true
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  sql:
    init:
      data-locations: classpath:/scripts/import.sql
      mode: always
# logging configuration
logging:
  file:
    name: /var/log/shanoir-ng-logs/shanoir-ng-users.log
  level:
    org.springframework.web: DEBUG
    org.hibernate: ERROR
    
    
---
spring:
  config.activate.on-profile: test
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  datasource:
    url: jdbc:h2:mem:shanoirNgUsers;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;DATABASE_TO_UPPER=false
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
    generate-ddl: true
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: create-drop
  mail:
    host: localhost
    port: 3025
    protocol: smtp
  autoconfigure.exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
  sql:
    init:
      data-locations: classpath:/scripts/test-data-h2.sql
      mode: always
front:
  server:
    url: https://shanoir-ng-nginx