# Url where shanoir is reachable (SHANOIR_URL_SCHEME://SHANOIR_URL_HOST)
#
# In the default setup, SHANOIR_URL_HOST is 'shanoir-ng-nginx' which is the
# default name of the nginx container.
#
# Possible schemes are 'https' (default) and 'http' (not recommended)
SHANOIR_URL_SCHEME=https
SHANOIR_URL_HOST=shanoir-ng-nginx

# URL where the OHIF-Viewer is reachable (SHANOIR_VIEWER_OHIF_URL_SCHEME://SHANOIR_VIEWER_OHIF_URL_HOST)
SHANOIR_VIEWER_OHIF_URL_SCHEME=https
SHANOIR_VIEWER_OHIF_URL_HOST=viewer

# SMTP relay used by shanoir for all outgoing mail
SHANOIR_SMTP_HOST=localhost

# Name and e-mail address of the administrator (for signing outgoing e-mails)
SHANOIR_ADMIN_EMAIL=michael.kain@inria.fr
SHANOIR_ADMIN_NAME=shanoir admin

# SHANOIR_PREFIX: Prefix prepended on all container names.
#
# If you need to deploy multiple instances of shanoir on the same docker host,
# then you may use a different value for each deployment.
#   eg: SHANOIR_PREFIX=prod-
#       SHANOIR_PREFIX=qualif-
SHANOIR_PREFIX=

# SHANOIR_ALLOWED_ADMIN_IPS: comma-separated list of IP addresses or networks
# from which admin accounts are allowed to log in.
#
#   eg: SHANOIR_ALLOWED_ADMIN_IPS=192.0.2.1,2001:db8:1::/64
#
# If empty then admin accounts allowed to log in from anywhere.
SHANOIR_ALLOWED_ADMIN_IPS=

# SHANOIR_X_FORWARDED: Generation of X-Forwarded-* HTTP headers
#
# Possible values:
#   'generate'	generate the X-Forwarded in the nginx container (default)
#   'trust'	trust the X-Forwarded-* headers in incoming requests. Use this
#		value if shanoir is located behind a reverse-proxy (NOTE: you
#		must ensure that the reverse-proxy properly sets the
#		'X-Forwarded-For' and 'X-Forwarded-Proto' headers).
#
SHANOIR_X_FORWARDED=generate


# SHANOIR_CERTIFICATE: Generation of the TLS server certificate
# 
# Possible values:
#   'auto'	auto-generate a self-signed certificate
#		(not recommended in production)
#   'manual'	use a manually generated certificate (provide by the sysadmin)
SHANOIR_CERTIFICATE=auto

# SHANOIR_CERTIFICATE_PEM_CRT: server certificate file (PEM format)
# SHANOIR_CERTIFICATE_PEM_KEY: server key file         (PEM format)
#
# Theses files shall be made available in the "/opt/ssl" external volume of the
# nginx container.
#
# Set these variables to 'none' to disable TLS completely. The nginx container
# will then serve HTTP in plain text on port 80 (not recommended unless
# shanoir is located behind a reverse-proxy that provides the TLS endpoint)
#
SHANOIR_CERTIFICATE_PEM_CRT=shanoir-ng-nginx.crt
SHANOIR_CERTIFICATE_PEM_KEY=shanoir-ng-nginx.key


# Admin account (master realm) created on the keycloak server, and used by the
# 'users' container for managing users.
SHANOIR_KEYCLOAK_USER=admin
SHANOIR_KEYCLOAK_PASSWORD=&a1A&a1A


# Authentification mode for the javascript keycloak adapter
#
# Possible values:
#   'check-sso'      (default) performs the authentication in a hidden iframe,
#                    which is fast but may not work with modern browsers when
#                    keycloak is served from a different hostname
#   'login-required' redirects to keycloak, which is slow but reliable
#
# see: https://www.keycloak.org/docs/latest/securing_apps/#_modern_browsers
SHANOIR_KEYCLOAK_ADAPTER_MODE=check-sso


# SHANOIR_MIGRATION: Migration management (for spring/wildfly-based containers)
#
# In production the recommended setup is to run shanoir with
# SHANOIR_MIGRATION='never' and apply the migrations manually by setting the
# value to 'manual' for one run.
#
# The 'keycloak' service does not implement any migration ('auto' and 'manual'
# are not supported). The upgrade procedure consists of:
#  1. exporting the user base into a json file ('export')
#  2. redeploying the service from scratch ('init')
#  3. importing the json user file ('import')
#
# With 'init', 'manual', 'import' or 'export', the service stops as soon as the
# startup is complete (oneshot run). 
#
#
# Possible values:
#
#   'init'	initialise the data in the external volumes. Use it the first
#		time you deploy shanoir (see the bootstrap script)
#		CAUTION: existing data will be overwritten
#
#   'never'	do not apply any migration
#
#   'auto'	apply the migrations on startup, then run normally
#		(note: on migration failure, the database container will
#		 immediately exit to avoid running with an unexpected db schema)
#
#   'manual'	apply the migrations then exit
#
#   'dev'       development mode: use let the microservices update the db schema
#               automatically (hibernate.ddl-auto=update)
#
#   [keycloak container only]
#   'export'	export the user database into a json file
#   'import'	import the user database from a json file
#		CAUTION: existing data will be overwritten
#
SHANOIR_MIGRATION=dev



# Name of this shanoir instance
#
# If defined, the name is displayed in the UI at the top of the side-bar.
#
#   eg: SHANOIR_INSTANCE_NAME=QUALIF
#
SHANOIR_INSTANCE_NAME=

# Custom color for this shanoir instance
# 
# If defined, this variable overrides the background color of the instance name
# and the color of the user icon in the side bar.
# 
# This must be a valid HTML color (predifined name or #RGB value)
#
#   eg: SHANOIR_INSTANCE_COLOR=teal
#
SHANOIR_INSTANCE_COLOR=

# URL where VIP (Virtual Imaging Platform) is reachable (VIP_URL_SCHEME://VIP_URL_HOST)
# Used by the CARMIN-API-CLIENT in the front of shanoir-ng to query for pipelines
VIP_URL_SCHEME=https
VIP_URL_HOST=vip.creatis.insa-lyon.fr
