<?xml version="1.0" encoding="UTF-8"?>
<!--
Shanoir NG - Import, manage and share neuroimaging data
Copyright (C) 2009-2019 Inria - https://www.inria.fr/
Contact us on https://project.inria.fr/shanoir/

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

You should have received a copy of the GNU General Public License
along with this program. If not, see https://www.gnu.org/licenses/gpl-3.0.html
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.shanoir-ng</groupId>
        <artifactId>shanoir-ng-back</artifactId>
        <version>3.2.2</version>
        <relativePath>../shanoir-ng-back</relativePath>
    </parent>

  <artifactId>nifti-conversion</artifactId>
  <packaging>jar</packaging>

  <name>shanoir-ng-nifti-conversion</name>
  <description>Shanoir-NG nifti conversion Microservice</description>
  
    <properties>
        <dcm4che.version>5.14.1</dcm4che.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.shanoir-ng</groupId>
            <artifactId>shanoir-ng-ms-common</artifactId>
            <version>3.2.2</version>
        </dependency>
        <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.dcm4che</groupId>
            <artifactId>dcm4che-core</artifactId>
            <version>${dcm4che.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.dcm4che</groupId>
            <artifactId>dcm4che-dcmr</artifactId>
            <version>${dcm4che.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dcm4che</groupId>
            <artifactId>dcm4che-emf</artifactId>
            <version>${dcm4che.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dcm4che.tool</groupId>
            <artifactId>dcm4che-tool-storescu</artifactId>
            <version>${dcm4che.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
  
    <build>
        <plugins>
            <!-- Package shanoir-ng-nifti-conversion.jar as Spring Boot executable: Avoid error: 
                no main manifest attribute, in /shanoir-ng-nifti-converter.jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <profiles>
                        <profile>${spring.active.profile}</profile>
                    </profiles>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Copy shanoir-ng-nifti-conversion.jar for docker-compose up running -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <copy file="target/${project.build.finalName}.jar"
                                    tofile="${basedir}/../docker-compose/nifti-conversion/${project.artifactId}.jar" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
