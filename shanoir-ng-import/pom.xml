<?xml version="1.0" encoding="UTF-8"?>

<!-- Shanoir NG - Import, manage and share neuroimaging data Copyright (C) 
	2009-2019 Inria - https://www.inria.fr/ Contact us on https://project.inria.fr/shanoir/ 
	This program is free software: you can redistribute it and/or modify it under 
	the terms of the GNU General Public License as published by the Free Software 
	Foundation, either version 3 of the License, or (at your option) any later 
	version. You should have received a copy of the GNU General Public License 
	along with this program. If not, see https://www.gnu.org/licenses/gpl-3.0.html -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.shanoir-ng</groupId>
		<artifactId>shanoir-ng-back</artifactId>
		<version>3.2.2</version>
		<relativePath>../shanoir-ng-back</relativePath>
	</parent>

	<artifactId>shanoir-ng-import</artifactId>
	<packaging>jar</packaging>

	<name>shanoir-ng-import</name>
	<description>Shanoir-NG Import Microservice</description>

	<dependencies>
		<!-- Shanoir-NG dependencies -->
		<dependency>
			<groupId>org.shanoir-ng</groupId>
			<artifactId>shanoir-ng-ms-common</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.shanoir-ng</groupId>
			<artifactId>shanoir-ng-study-rights</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.shanoir.anonymization</groupId>
			<artifactId>anonymization</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.shanoir-ng</groupId>
			<artifactId>shanoir-ng-exchange</artifactId>
			<version>3.2.2</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId>
		</dependency>

		<!-- DICOM Weasis Tools, based on dcm4che3 -->
		<dependency>
			<groupId>org.weasis</groupId>
			<artifactId>weasis-dicom-tools</artifactId>
			<version>${dcm4che.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- DCM4CHE dependencies -->
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-core</artifactId>
			<version>${dcm4che.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-dcmr</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che</groupId>
			<artifactId>dcm4che-emf</artifactId>
			<version>${dcm4che.version}</version>
		</dependency>
		<dependency>
			<groupId>org.dcm4che.tool</groupId>
			<artifactId>dcm4che-tool-storescu</artifactId>
			<version>${dcm4che.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- mvnrepository.com/artifact/org.apache.httpcomponents/httpmime -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.5.14</version>
		</dependency>
		
		<dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-csv</artifactId>
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Package shanoir-ng-import.jar as Spring Boot executable: Avoid error: 
				no main manifest attribute, in /shanoir-ng-import.jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<classpathDependencyExcludes>
						<classpathDependencyExclude>org.slf4j:slf4j-log4j12</classpathDependencyExclude>
					</classpathDependencyExcludes>
				</configuration>
			</plugin>
			<!-- Used here for ShanoirUploader: creae an additional single jar to be used by ShUp -->
	        <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	            <configuration>
	                <classifier>exec</classifier>
	            </configuration>
	        </plugin>
			<!-- Copy shanoir-ng-import.jar for docker-compose up running -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<target>
								<copy file="target/${project.build.finalName}-exec.jar"
									tofile="${basedir}/../docker-compose/import/${project.artifactId}.jar" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>mvn-repo-master</id>
			<url>https://raw.github.com/nroduit/mvn-repo/master/</url>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<spring-active-profile>dev</spring-active-profile>
			</properties>
		</profile>
		<profile>
			<id>qualif</id>
			<properties>
				<spring.active.profile>qualif</spring.active.profile>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
	</profiles>

</project>
