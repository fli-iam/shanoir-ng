package org.shanoir.ng.vip.processingResource.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import org.shanoir.ng.dataset.model.Dataset;
import org.shanoir.ng.vip.executionMonitoring.model.ExecutionMonitoring;
import org.shanoir.ng.processing.model.DatasetProcessing;
import org.shanoir.ng.shared.core.model.AbstractEntity;

import java.io.Serializable;
import java.util.List;

@Entity
public class ProcessingResource implements Serializable { //No AbstractEntity extension because it's only usefull for the autogenerated Id, what we don't want

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "processing_id")
    private DatasetProcessing processing;

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "processing_resource_to_datasets", joinColumns = @JoinColumn(name = "resource_id"), inverseJoinColumns = @JoinColumn(name = "dataset_id"))
    private List<Dataset> datasets;

    @Id
    @NotNull
    private String resourceId;

    public ProcessingResource() {}

    public ProcessingResource(ExecutionMonitoring processing, List<Dataset> datasets, String resourceId) {
        this.processing = processing;
        this.datasets = datasets;
        this.resourceId = resourceId;
    }

    public DatasetProcessing getProcessing() {
        return processing;
    }

    public void setProcessing(DatasetProcessing processing) {
        this.processing = processing;
    }

    public List<Dataset> getDataset() {return datasets;}

    public void setDataset(List<Dataset> datasets) {
        this.datasets = datasets;
    }

    public String getResourceId() {
        return resourceId;
    }

    public void setResourceId(String resourceId) {
        this.resourceId = resourceId;
    }
}
