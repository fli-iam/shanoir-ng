# Shanoir NG - Import, manage and share neuroimaging data
# Copyright (C) 2009-2019 Inria - https://www.inria.fr/
# Contact us on https://project.inria.fr/shanoir/
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see https://www.gnu.org/licenses/gpl-3.0.html

######################################
# Default profile is production      #
######################################
server:
  port: 9904
  error:
    whitelabel:
      enabled: false
##### Database #####
spring:
  datasource:
    url: jdbc:mysql://database:3306/datasets?useLegacyDatetimeCode=false&serverTimezone=Europe/Paris&characterEncoding=utf-8&useSSL=false
    username: datasets
    password: password
    # The SQL dialect makes Hibernate generate better SQL for the chosen database
    driver-class-name: com.mysql.jdbc.Driver
    initialize: false
    data: classpath:/scripts/import.sql
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: validate
      # Naming strategy
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        connection:
          charset: UTF-8
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
##### Others #####
  jackson:
    mapper:
      use-getters-as-setters: false
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  jooq:
    sql-dialect: Mysql
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
  session:
    store-type: none
  http:
    multipart:
      maxFileSize: 5000Mb
      maxRequestSize: 5000Mb
front.server:
  address: http://shanoir-ng-nginx/shanoir-ng/
  url: http://shanoir-ng-nginx
##### Keycloak #####
keycloak:
  # attention: this config for the token issuer needs to match the domain of the frontend
  # used for token creation AND the server url needs to be known from inside the docker network:
  auth-server-url: http://shanoir-ng-nginx/auth
  cors: true
  realm: shanoir-ng
  resource: shanoir-ng-datasets
  ssl-required: external
  securityConstraints:
    - authRoles: 
      - ROLE_ADMIN
      - ROLE_EXPERT
      - ROLE_GUEST
      - ROLE_USER
    - securityCollections:
      - name: datasets secured api
      - patterns:
        - /*
# Solr
spring.data.solr.host: http://solr:8983/solr/shanoir/
# microservices url
ms.url:
  shanoir-ng-studies: http://studies:9902/
# Data folder configuration
datasets-data: /var/datasets-data
bids-data-folder: /var/datasets-data/bids-data
# logging configuration
logging:
  file: /var/log/shanoir-ng-logs/shanoir-ng-datasets.log
  level:
    org.springframework.web: ERROR
    org.hibernate: ERROR
    org.shanoir: INFO
        
  
### ============================================================= ###
###                  Dicom Server Configuration                   ###
### ============================================================= ###
dcm4chee-arc:
  # Attention: the below values are used twice: 1) to address the PACS e.g.
  # to actually send the dicoms (in StowRs- or CStoreDicomService) to the
  # Shanoir backup PACS and 2) to generate the WADO download URLs in the
  # class DicomDatasetExpressionStrategy
  protocol: http://
  host: dcm4chee-arc
  port.web: 8081
  port.dcm: 11112
  # flag for either using the DicomWeb protocol (REST) or the Dicom protocol
  # if false: 1) c-store used to send dicom files to PACS and 2) generated
  # URLs in db are in WADO-URI format
  # if true: 2) stow-rs used to send dicom files to PACS and 2) generated URLs
  # in db are in WADO-RS format
  # default is true as we want to use new protocols in sh-ng
  dicom.web: false
  dicom.c-store.aet.called: DCM4CHEE
  # use "/wado" for dcm4chee2 and "/dcm4chee-arc/aets/DCM4CHEE/wado" for dcm4chee3
  dicom.wado.uri: /dcm4chee-arc/aets/DCM4CHEE/wado
  dicom.web.rs: /dcm4chee-arc/aets/DCM4CHEE/rs/studies

---

######################################
# DO NOT COMMIT VALUES MODIFICATIONS #
######################################
spring:
  profiles: dev
  datasource:
    initialize: true
  jpa:
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: create
    # Show or not log for each sql query
    show-sql: true

# logging configuration
logging:
  file: /var/log/shanoir-ng-logs/shanoir-ng-datasets.log
  level:
    org.springframework.web: DEBUG
    org.hibernate: ERROR
    
---
spring:
  profiles: test
  datasource:
    url: jdbc:h2:mem:SHANOIR_NG_DATASET;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    initialize: true
    data: classpath:/scripts/test-data-h2.sql
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      # Hibernate ddl auto (create, create-drop, update, validate)
      ddl-auto: create-drop