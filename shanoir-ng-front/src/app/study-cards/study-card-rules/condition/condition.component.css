:host { white-space: nowrap; color: purple; }

select-box, input { border: none !important; margin-right: 5px; }
input { box-sizing: border-box; width: auto; padding: 0 1px; }
auto-ajust-input { vertical-align: bottom; }

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { opacity: 1; }

.cardinality-type { color: darkgreen; }
.cardinality { color: chocolate; }
.type { }
.var { color: blue; }
.method { color: darkgreen; }
.value { color: chocolate; text-overflow: ellipsis; }
.type { color: purple; }

.view .var { margin-right: 5px; }
.view .multi-value { margin-left: 5px; text-align: left; }
.view .cardinality-type, .view .cardinality { margin-right: 5px; }
.or { color: purple; }

:host:hover .delete, .delete:hover { opacity: 1; }
.delete { opacity: 0; transition: opacity 0.3s; color: var(--grey); position: absolute; right: -17px; top: 4px; bottom: 4px; z-index: 1; display: flex; align-items: center; }
.delete:hover { color: var(--color-error); cursor: pointer; } 

.delete-value { transition: color 0.3s; color: var(--grey); }
.delete-value:hover { color: var(--color-a); cursor: pointer; } 
.delete-value i { vertical-align: -1px; margin-left: 4px; }

.error:not(:focus-within) { color: white !important; background-color: var(--color-error) !important; border-radius: 4px !important; }
.error:not(:focus-within)::ng-deep ::placeholder { color: white !important; }

.multi-value { display: inline-block; vertical-align: top; position: relative; }
.multi-value .one-value { display: flex; }

.add-cond-value  { text-align: left; color: var(--color-b); cursor: pointer; display: inline-block; padding: 1px 8px; border: 1px dashed var(--grey); border-radius: 10px; margin: 1px 0 4px -7px; padding: 0px 7px; }
.add-cond-value  i { margin-right: 7px; color: purple; }

.one-value + .one-value::before { content: "or "; margin-right: 5px; color: purple; }